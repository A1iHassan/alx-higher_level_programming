from ``1-my_list.py`` module
============================

Using ``Mylist``
----------------

first import the class

    >>> Mylist = __import__("1-my_list").Mylist

check the instance

    >>> m = Mylist()
    >>> isinstance(m, list)
    True

testing the ``print_sorted`` method

with an empty list

    >>> m = Mylist([])
    >>> m.print_sorted()
    []

with a non-sorted list

    >>> m = Mylist([2, 4, 1])
    >>> m.print_sorted()
    [1, 2, 4]

with a sorted list

    >>> m = Mylist([1, 2, 3])
    >>> m.print_sorted()
    [1, 2, 3]

with negative numbers

    >>> m = Mylist([-1, -2, -5])
    >>> m.print_sorted()
    [-5, -2, -1]

calling with additional arguments

    >>> m = Mylist([1, 2, 3, 4, 6])
    >>> m.print_sorted([2, 4, 5])
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given

calling the method on class level

    >>> m = Mylist([1, 3, 6])
    >>> m.__class__.print_sorted()
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() missing 1 required positional argument: 'self'
